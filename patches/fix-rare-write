Bottom: c39e5296b7d44717e970ee71bde4ae4f717e0589
Top:    f4af0c95643d8cfd240a83a0398c1bff9d3e85a8
Author: Igor Stoppa <igor.stoppa@huawei.com>
Date:   2018-07-30 08:46:48 +0300

Fix rare write


---

diff --git a/include/linux/rare_write.h b/include/linux/rare_write.h
index b4c489e2afd3..d7398f8c59a8 100644
--- a/include/linux/rare_write.h
+++ b/include/linux/rare_write.h
@@ -13,6 +13,7 @@
 #ifndef _LINUX_RARE_WRITE_H
 #define _LINUX_RARE_WRITE_H
 
+#include <linux/compiler.h>
 #include <linux/mm.h>
 
 extern long __start_rare_write_after_init;
@@ -55,15 +56,17 @@ bool __raw_rare_write(const void *dst, const void *src,
 
 		if (type == RARE_WRITE_VIRT_ADDR)
 			page = virt_to_page(dst);
-		else
+		else if (type == RARE_WRITE_VMALLOC_ADDR)
 			page = vmalloc_to_page(dst);
+		else
+			return false;
 		base = vmap(&page, 1, VM_MAP, PAGE_KERNEL);
 		if (WARN(!base, "failed to remap rare-write page"))
 			return false;
 		offset = (unsigned long)dst & ~PAGE_MASK;
 		offset_complement = ((size_t)PAGE_SIZE) - offset;
 		size = min(((int)n_bytes), ((int)offset_complement));
-		memcpy(base + offset, src, size);
+		WRITE_ONCE(base + offset, src, size);
 		vunmap(base);
 		dst += size;
 		src += size;
