Bottom: f76095caaed8d291ddf41fd74fd45d6179d72908
Top:    a99af8420853d22a362d23a785540f7601e5b6d2
Author: Igor Stoppa <igor.stoppa@huawei.com>
Date:   2018-08-03 12:50:50 +0300

Refresh of struct-page-add-field-for

---

diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h
index d59691428e16..0791cad4b80f 100644
--- a/include/linux/mm_types.h
+++ b/include/linux/mm_types.h
@@ -87,20 +87,24 @@ struct page {
 			/* See page-flags.h for PAGE_MAPPING_FLAGS */
 			struct address_space *mapping;
 			pgoff_t index;		/* Our offset within mapping. */
-			/**
-			 * @private: Mapping-private opaque data.
-			 * Usually used for buffer_heads if PagePrivate.
-			 * Used for swp_entry_t if PageSwapCache.
-			 * Indicates order in the buddy system if PageBuddy.
-			 */
-			unsigned long private;
-			/**
-			 * @area: reference to the containing area
-			 * For pages that are mapped into a virtually
-			 * contiguous area, avoids performing a more
-			 * expensive lookup.
-			 */
-			struct vm_struct *area;
+			union {
+				/**
+				 * @private: Mapping-private opaque data.
+				 * Usually used for buffer_heads if
+				 * PagePrivate.
+				 * Used for swp_entry_t if PageSwapCache.
+				 * Indicates order in the buddy system if
+				 * PageBuddy.
+				 */
+				unsigned long private;
+				/**
+				 * @area: reference to the containing area
+				 * For pages that are mapped into a virtually
+				 * contiguous area, avoids performing a more
+				 * expensive lookup.
+				 */
+				struct vm_struct *area;
+			};
 		};
 		struct {	/* slab, slob and slub */
 			union {
