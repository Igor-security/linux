Bottom: 2ae491ac5ec991cbaafef773df6c8339e2e3ed2e
Top:    607af0dc0ea87a6dc4a9c8cacff3310caba1567a
Author: Igor Stoppa <igor.stoppa@huawei.com>
Date:   2018-06-03 14:11:26 +0300

Refresh of test-cases-for-rare-writes-of

---

diff --git a/mm/test_rare_write.c b/mm/test_rare_write.c
index 917b69ffaaf6..9fb111846da7 100644
--- a/mm/test_rare_write.c
+++ b/mm/test_rare_write.c
@@ -138,7 +138,7 @@ static bool test_ulonglong(void)
 }
 
 static int referred_value = INIT_VAL;
-static int *reference __rare_write_after_init = NULL;
+static int *reference __rare_write_after_init;
 static bool test_ptr(void)
 {
 	return rare_write_ptr(&reference, &referred_value) &&
@@ -171,6 +171,7 @@ static bool test_illegal_rare_write_ro_after_init(void)
 	return true;
 }
 
+/* "volatile" to force the compiler to not optimize away the reading back */
 static volatile const int const_data = INIT_VAL;
 static bool test_illegal_rare_write_const(void)
 {
